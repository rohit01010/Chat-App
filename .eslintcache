[{"F:\\ROHIT\\React js\\todo app\\Todo-App\\src\\index.js":"1","F:\\ROHIT\\React js\\todo app\\Todo-App\\src\\App.js":"2","F:\\ROHIT\\React js\\todo app\\Todo-App\\src\\reportWebVitals.js":"3","F:\\ROHIT\\React js\\todo app\\Todo-App\\src\\firebase.js":"4","F:\\ROHIT\\React js\\Chat App\\src\\index.js":"5","F:\\ROHIT\\React js\\Chat App\\src\\App.js":"6","F:\\ROHIT\\React js\\Chat App\\src\\reportWebVitals.js":"7","F:\\ROHIT\\React js\\Chat App\\src\\reducer.js":"8","F:\\ROHIT\\React js\\Chat App\\src\\StateProvider.js":"9","F:\\ROHIT\\React js\\Chat App\\src\\firebase.js":"10","F:\\ROHIT\\GitHub\\Chat App\\src\\index.js":"11","F:\\ROHIT\\GitHub\\Chat App\\src\\reportWebVitals.js":"12","F:\\ROHIT\\GitHub\\Chat App\\src\\App.js":"13","F:\\ROHIT\\GitHub\\Chat App\\src\\reducer.js":"14","F:\\ROHIT\\GitHub\\Chat App\\src\\StateProvider.js":"15","F:\\ROHIT\\GitHub\\Chat App\\src\\firebase.js":"16"},{"size":689,"mtime":1611575170446,"results":"17","hashOfConfig":"18"},{"size":9409,"mtime":1611597371954,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":513,"mtime":1611574595957,"results":"21","hashOfConfig":"18"},{"size":689,"mtime":1611575170446,"results":"22","hashOfConfig":"23"},{"size":9472,"mtime":1611733213923,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":353,"mtime":1611577296260,"results":"26","hashOfConfig":"23"},{"size":401,"mtime":1611576251773,"results":"27","hashOfConfig":"23"},{"size":525,"mtime":1611661050947,"results":"28","hashOfConfig":"23"},{"size":689,"mtime":1611575170446,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":9203,"mtime":1611738691617,"results":"32","hashOfConfig":"30"},{"size":353,"mtime":1611577296260,"results":"33","hashOfConfig":"30"},{"size":401,"mtime":1611576251773,"results":"34","hashOfConfig":"30"},{"size":436,"mtime":1611740047934,"results":"35","hashOfConfig":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1cxurby",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"144vuu5",{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9zw6rc",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\ROHIT\\React js\\todo app\\Todo-App\\src\\index.js",[],["71","72"],"F:\\ROHIT\\React js\\todo app\\Todo-App\\src\\App.js",["73","74","75","76"],"import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n// import ListGroup from \"react-bootstrap/ListGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport firebase from \"firebase\";\nimport { db, auth, provider } from \"./firebase\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { actionTypes } from \"./reducer\";\nimport useStateValue from \"./StateProvider\";\n\nfunction App() {\n  const [todos, setTodos] = useState([\"\"]);\n  const [input, setInput] = useState(\"\");\n  const [showSignUp, setSignUpShow] = useState(false);\n  const [showSignIn, setSignInShow] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [{ userGoogle }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        //already logged in\n        setUser(authUser);\n      } else {\n        //user log out\n        setUser(null);\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  //fetch and use Todo data from database\n  useEffect(() => {\n    db.collection(\"users\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) => {\n        setTodos(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            username: doc.data().username,\n            todo: doc.data().todo,\n            time: doc.data().localtime,\n          }))\n        );\n      });\n  }, []);\n\n  //add new todo to database\n  const addTodos = (event) => {\n    event.preventDefault();\n    // setTodos([...todos, input]);\n    db.collection(\"users\")\n      .add({\n        username: user?.displayName,\n        todo: input,\n        localtime: giveMeTime(),\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      })\n      .catch((err) => alert(err.message));\n\n    scrollTheDisp();\n\n    setInput(\"\");\n  };\n\n  //Modal Opening and Closing functions\n  const handleSignUpClose = () => setSignUpShow(false);\n  const handleSignInClose = () => setSignInShow(false);\n\n  //Sign Up function\n  const signUp = (event) => {\n    event.preventDefault();\n    // console.log(\"email: \" + email + \" password: \" + password + \" sign up\");\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((err) => alert(err.message));\n    setEmail(\"\");\n    setPassword(\"\");\n    handleSignUpClose();\n  };\n\n  //Sign In function\n  const signIn = (event) => {\n    event.preventDefault();\n    // console.log(\"email: \" + email + \" password: \" + password + \" sign in\");\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => alert(err.message));\n    setEmail(\"\");\n    setPassword(\"\");\n    handleSignInClose();\n  };\n\n  //Google Sign In\n  const signInWithGoogle = (event) => {\n    event.preventDefault();\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        dispatch({\n          type: actionTypes.SET_USER,\n          userGoogle: result.user,\n        });\n        setUser(result.user);\n      })\n      .catch((err) => alert(err.message));\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  function checkTime(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n  }\n\n  function giveMeTime() {\n    var today = new Date();\n    var h = today.getHours();\n    var m = today.getMinutes();\n    m = checkTime(m);\n    return h + \":\" + m;\n  }\n\n  let Disp = React.createRef();\n\n  function scrollTheDisp() {\n    Disp.current.scrollIntoView();\n  }\n\n  return (\n    <div className=\"App\">\n      <Modal centered show={showSignUp} onHide={handleSignUpClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Sign Up</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder=\"Username\"\n                autoComplete=\"off\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Email\"\n                autoComplete=\"off\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n              />\n            </Form.Group>\n            <Button\n              disabled={!(email && password)}\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={signUp}\n            >\n              Sign Up\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      <Modal centered show={showSignIn} onHide={handleSignInClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Sign In</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Email\"\n                autoComplete=\"off\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n              />\n            </Form.Group>\n            <Button\n              disabled={!(email && password)}\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={signIn}\n            >\n              Sign In\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      {user ? (\n        <div className=\"App__loggedin\">\n          <div className=\"App__header\">\n            <h1>Chat Room App</h1>\n            <Button onClick={() => auth.signOut()}>Log out</Button>\n          </div>\n          <div className=\"App__display\">\n            {todos.map((todo) => {\n              return (\n                <div\n                  className={\n                    todo.username == user?.displayName\n                      ? \"App__sendmessage\"\n                      : \"App__message\"\n                  }\n                >\n                  <span className=\"App__display__user\">{todo.username}</span>\n                  <span style={{ display: \"flex\" }}>\n                    <span className=\"App__display__msg\">{todo.todo}</span>\n                    <span className=\"App__display__time\">\n                      {todo.time ? todo.time : null}\n                    </span>\n                  </span>\n                  <Button\n                    onClick={(event) =>\n                      db.collection(\"users\").doc(todo.id).delete()\n                    }\n                  >\n                    <FontAwesomeIcon icon={faTrash} />\n                  </Button>\n                </div>\n              );\n            })}\n            <div className=\"App__message\" className=\"space\" ref={Disp}>\n              <br />\n              <br />\n              <br />\n              <br />\n              <br />\n            </div>\n          </div>\n          <div className=\"App__input\">\n            <form>\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Enter Task\"\n                autoComplete=\"off\"\n              />\n              <button disabled={!input} type=\"submit\" onClick={addTodos}>\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      ) : (\n        <div className=\"Appp__Start\">\n          <div className=\"App__Start__sign\">\n            <Button\n              style={{ float: \"none\", margin: \"20px\" }}\n              onClick={() => setSignUpShow(true)}\n            >\n              Sign Up\n            </Button>\n            <Button\n              style={{ float: \"none\", margin: \"20px\" }}\n              onClick={() => setSignInShow(true)}\n            >\n              Sign In\n            </Button>\n            <Button\n              style={{\n                float: \"none\",\n                margin: \"20px\",\n              }}\n              onClick={signInWithGoogle}\n            >\n              Sign In with google\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","F:\\ROHIT\\React js\\todo app\\Todo-App\\src\\reportWebVitals.js",[],"F:\\ROHIT\\React js\\todo app\\Todo-App\\src\\firebase.js",[],["77","78"],"F:\\ROHIT\\React js\\Chat App\\src\\index.js",[],"F:\\ROHIT\\React js\\Chat App\\src\\App.js",["79","80","81","82","83"],"F:\\ROHIT\\React js\\Chat App\\src\\reportWebVitals.js",[],"F:\\ROHIT\\React js\\Chat App\\src\\reducer.js",[],"F:\\ROHIT\\React js\\Chat App\\src\\StateProvider.js",[],"F:\\ROHIT\\React js\\Chat App\\src\\firebase.js",[],"F:\\ROHIT\\GitHub\\Chat App\\src\\index.js",[],"F:\\ROHIT\\GitHub\\Chat App\\src\\reportWebVitals.js",[],"F:\\ROHIT\\GitHub\\Chat App\\src\\App.js",["84","85","86","87","88"],"F:\\ROHIT\\GitHub\\Chat App\\src\\reducer.js",[],"F:\\ROHIT\\GitHub\\Chat App\\src\\StateProvider.js",[],"F:\\ROHIT\\GitHub\\Chat App\\src\\firebase.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":11,"column":31,"nodeType":"95","messageId":"96","endLine":11,"endColumn":37},{"ruleId":"93","severity":1,"message":"97","line":25,"column":12,"nodeType":"95","messageId":"96","endLine":25,"endColumn":22},{"ruleId":"98","severity":1,"message":"99","line":246,"column":35,"nodeType":"100","messageId":"101","endLine":246,"endColumn":37},{"ruleId":"102","severity":1,"message":"103","line":268,"column":43,"nodeType":"104","endLine":268,"endColumn":60},{"ruleId":"89","replacedBy":"105"},{"ruleId":"91","replacedBy":"106"},{"ruleId":"93","severity":1,"message":"107","line":7,"column":10,"nodeType":"95","messageId":"96","endLine":7,"endColumn":25},{"ruleId":"93","severity":1,"message":"108","line":8,"column":10,"nodeType":"95","messageId":"96","endLine":8,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":11,"column":31,"nodeType":"95","messageId":"96","endLine":11,"endColumn":37},{"ruleId":"93","severity":1,"message":"97","line":25,"column":12,"nodeType":"95","messageId":"96","endLine":25,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":268,"column":43,"nodeType":"104","endLine":268,"endColumn":60},{"ruleId":"93","severity":1,"message":"107","line":7,"column":10,"nodeType":"95","messageId":"96","endLine":7,"endColumn":25},{"ruleId":"93","severity":1,"message":"108","line":8,"column":10,"nodeType":"95","messageId":"96","endLine":8,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":11,"column":31,"nodeType":"95","messageId":"96","endLine":11,"endColumn":37},{"ruleId":"93","severity":1,"message":"97","line":25,"column":12,"nodeType":"95","messageId":"96","endLine":25,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":261,"column":43,"nodeType":"104","endLine":261,"endColumn":60},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'userGoogle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["109"],["110"],"'FontAwesomeIcon' is defined but never used.","'faTrash' is defined but never used.","no-global-assign","no-unsafe-negation"]